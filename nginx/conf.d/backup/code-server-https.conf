server {
    listen       80;
    server_name  dev.devspoon.com www.dev.devspoon.com;

    rewrite ^ https://$host$request_uri permanent;
   
    if ($host !~* ^(dev\.devspoon\.com|www\.dev\.devspoon\.com)$) {
        return 444;
    }
}

server {
    listen       443 ssl;
    http2       on;
    server_name  dev.devspoon.com www.dev.devspoon.com;

    ssl_certificate /etc/letsencrypt/live/dev.devspoon.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.devspoon.com/privkey.pem;
    ssl_dhparam /etc/ssl/certs/dev.devspoon.com/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096

    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score.
    ssl_session_cache shared:SSL:20m;

    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;

    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    ssl_trusted_certificate /etc/letsencrypt/live/dev.devspoon.com/chain.pem;
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    access_log /log/nginx/dev.devspoon.com.nginx.log main;
    error_log  /log/nginx/dev.devspoon.com.nginx_error.log warn;

    #if ($host !~* ^(devspoon\.com|www\.devspoon\.com)$) {
    #    return 444;
    #}


    location / {
        autoindex off;
        proxy_pass http://code-server:8443;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header Host $host;
        # proxy_redirect http:// https://;
    }
 
    # Allow Lets Encrypt Domain Validation Program
    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root /projects/code-server;
    }
 
    # Block dot file (.htaccess .htpasswd .svn .git .env and so on.)
    location ~ /\. {
        deny all;
    }
 
    # Block (log file, binary, certificate, shell script, sql dump file) access.
    location ~* \.(log|binary|pem|enc|crt|conf|cnf|sql|sh|key|yml|lock)$ {
        deny all;
    }
 
    # Block access
    location ~* (composer\.json|composer\.lock|composer\.phar|contributing\.md|license\.txt|readme\.rst|readme\.md|readme\.txt|copyright|artisan|gulpfile\.js|package\.json|phpunit\.xml|access_log|error_log|gruntfile\.js)$ {
        deny all;
    }
 
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
 
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    if ($bad_bot) {
        return 403;
    }

}


